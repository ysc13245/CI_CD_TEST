worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # MIME 유형(Multipurpose Internet Mail Extensions Type)
    # MIME 유형 : 서버와 클라이언트 간에 데이터가 전송될 때 데이터의 유형을 명확하게 정의한다.
    # 데이터 확장자 html htm shtml -> MIME 유형 text/html
    # 데이터 확장자 css -> MIME 유형 text/css
    include       mime.types;
    default_type application/octet-stream;

    # 로그 포맷 및 파일 경로 설정
    log_format  main  'remote_addr - remote_user [time_local] "request" '
                    'status body_bytes_sent "http_referer" '
                    '"http_user_agent" "http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 서버 - 클라이언트 TCP 연결 유지 시간
    keepalive_timeout 60;

    # Gzip 설정
    # 압축된  Gzip 파일(.gz)을 서빙
    gzip on;
    gzip_static on;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml+rss text/javascript;
    gzip_min_length 1024;
    gzip_comp_level 5;

    # HTTP 요청 처리 (HTTP -> HTTPS 리디렉션)
    server {
        listen 80;
        server_name mysite.com;

        # HTTP 요청을 HTTPS로 리디렉트
        return 301 https://$host$request_uri;
    }

    # HTTPS 요청 처리 (SSL 없이 HTTP로 처리)
    server {
        listen 443 ssl;

        # 처리할 도메인 이름
        server_name mysite.com;
        
        # SSL 인증서 경로
        ssl_certificate /etc/nginx/ssl/fullchain.pem;  # 인증서
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;  # 개인키

        # SSL 프로토콜 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;

        # HSTS 설정
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # 정적 파일을 서빙할 폴더 경로
        root /usr/share/nginx/html;

        # 기본 경로(/) 요청에 대한 서빙 파일
        index index.html;

        # 보안 헤더 추가
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
        add_header Content-Security-Policy "default-src 'self'";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # 기본 경로(/) 요청 처리
        location / {
            # 클라이언트가 요청한 파일이 있으면 해당 파일 서빙
            # 클라이언트가 요청한 파일이 없으면 index.html 서빙
            # SPA의 라우팅 문제를 해결하기 위해 필수 설정
            try_files $uri /index.html;
        }

        # 정적 파일 캐싱
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 365d;
            add_header Cache-Control "public, max-age=31536000";
        }
    }
}